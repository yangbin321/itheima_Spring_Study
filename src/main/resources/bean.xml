<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的IOC，把service对象配置进来-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>

    <!--spring中基于xml的aop配置步骤
        1、把通知Bean的也交给spring来管理
        2、使用aop:config标签表明开始AOP的配置
        3、使用aop:aspect标签表明配置切面
                id属性：是给切面提供一个唯一标识
                ref属性：指定通知类bean的Id
        4、在aop:aspect标签的内部使用对应标签来配置通知的类型
                我们现在实例是让printLog方法在切入点方法执行之前：所以是前置通知
                aop:before：表示配置前置通知
                    method属性：用于指定Logger类中哪个方法是前置通知
                    pointcut属性：用于指定切入点表达式，该u表达式的含义指的是对业务层中哪些额方法增强

            切入点表达式的写法：
                关键字：execution(表达式)
                表达式：
                    访问修饰符   返回值  包名.包名.包名....类名.方法名（参数列表）
                 标准的表达式写法：
                    public void com.iyheima.service.impl.AccountServiceImpl.saveAccount()
    -->
    <!--配置logger类-->
    <bean id="logger" class="com.itheima.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <aop:aspect id="logAdvice" ref="logger">
            <aop:before method="ptintLog" pointcut="execution(public void com.itheima.service.impl.AccountServiceImpl.saveCccount())"></aop:before>
        </aop:aspect>
    </aop:config>

</beans>